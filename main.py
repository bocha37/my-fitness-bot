from aiogram import Bot, Dispatcher
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import F, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
import os

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# === FSM –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ ===
class QuestionState(StatesGroup):
    waiting_for_question = State()

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    web_app_url = "https://fitnessbo4a-webapp.vercel.app/index.html" 

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ë–ñ–£", web_app={"url": web_app_url})],
        [InlineKeyboardButton(text="‚úâÔ∏è –õ–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å", web_app={"url": "https://fitnessbo4a-webapp.vercel.app/question.html"})] 
    ])

    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:", reply_markup=keyboard)

# === –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===
@dp.message(F.from_user.id == ADMIN_ID, F.reply_to_message)
async def answer_to_user(message: Message):
    original = message.reply_to_message

    if not original or not original.text.startswith("üì© –í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
        await message.answer("–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    try:
        user_id = int(original.text.split()[5])  # "–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 123456789..."
    except (IndexError, ValueError):
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    try:
        await bot.send_message(user_id, f"üí¨ –û—Ç–≤–µ—Ç –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞:\n{message.text}")
        await message.answer(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
    except Exception as e:
        await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç: {e}")

# === –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == "__main__":
    dp.run_polling(bot)